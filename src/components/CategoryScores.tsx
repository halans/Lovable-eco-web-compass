
import React from 'react';
import { Grid, Leaf, Cpu, Image, Cloud, Zap } from 'lucide-react';
import ScoreCard from './ui-components/ScoreCard';
import { WebsiteAnalysisResult } from '@/types/analysis';

interface CategoryScoresProps {
  result: WebsiteAnalysisResult;
}

const CategoryScores: React.FC<CategoryScoresProps> = ({ result }) => {
  return (
    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4">
      <ScoreCard 
        title="Performance"
        score={result.performanceScore}
        info="Measures page load speed, resource optimization, and overall performance efficiency."
        icon={<Zap size={18} />}
      />
      <ScoreCard 
        title="Page Weight"
        score={result.pageWeightScore}
        info="Evaluates the total download size of the page including all resources."
        icon={<Image size={18} />}
      />
      <ScoreCard 
        title="Carbon Footprint"
        score={result.carbonFootprintScore}
        info="Calculates the carbon emissions generated by the website."
        icon={<Leaf size={18} />}
      />
      <ScoreCard 
        title="Hosting"
        score={result.hostingScore}
        info="Assesses if the website is hosted on green energy servers."
        icon={<Cloud size={18} />}
      />
      <ScoreCard 
        title="Best Practices"
        score={result.bestPracticesScore}
        info="Evaluates adherence to sustainable web development principles."
        icon={<Grid size={18} />}
      />
    </div>
  );
};

export default CategoryScores;
